@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Login</h3>

<div class="form-group">
    <label>Username</label>
    <input class="form-control" @bind="loginModel.Username" />
</div>
<div class="form-group">
    <label>Password</label>
    <input class="form-control" @bind="loginModel.Password" type="password" />
</div>
<button class="btn btn-primary mt-2" @onclick="LoginUser">Login</button>

<p style="color:red">@errorMessage</p>
<p style="color:green">@successMessage</p>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage = "";
    private string successMessage = "";

    private async Task LoginUser()
    {
        errorMessage = "";
        successMessage = "";

        try
        {
            var response = await Http.PostAsJsonAsync("api/User/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var tokenResponse = await response.Content.ReadFromJsonAsync<TokenResponse>();
                successMessage = "Login successful!";
                Console.WriteLine($"Token: {tokenResponse.Token}");

                // Store token in localStorage or cookies (add appropriate storage logic here)
                // For example:
                // await localStorage.SetItemAsync("authToken", tokenResponse.Token);

                Navigation.NavigateTo("/");
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                errorMessage = $"Error: {error}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }

    public class TokenResponse
    {
        public string Token { get; set; }
    }
}
