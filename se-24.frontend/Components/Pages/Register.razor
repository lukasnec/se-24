@using se_24.frontend.Services
@page "/register"
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Register</h3>

<div class="form-group">
    <label>Username</label>
    <input class="form-control" @bind="registerModel.Username" />
</div>
<div class="form-group">
    <label>Email</label>
    <input class="form-control" @bind="registerModel.Email" type="email" />
</div>
<div class="form-group">
    <label>Password</label>
    <input class="form-control" @bind="registerModel.Password" type="password" />
</div>
<button class="btn btn-primary mt-2" @onclick="RegisterUser">Register</button>

<p style="color:red">@errorMessage</p>
<p style="color:green">@successMessage</p>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string errorMessage = "";
    private string successMessage = "";

    private async Task RegisterUser()
    {
        errorMessage = "";
        successMessage = "";

        try
        {
            var isSuccess = await AuthService.RegisterUserAsync(registerModel.Username, registerModel.Email, registerModel.Password);
            if (isSuccess)
            {
                successMessage = "Registration successful! Redirecting to login...";
                await Task.Delay(2000); // Optional delay for user feedback
                Navigation.NavigateTo("/login");
            }
            else
            {
                errorMessage = "Registration failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }

    public class RegisterModel
    {
        public string Username { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
    }
}
